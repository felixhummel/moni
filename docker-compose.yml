networks:
  ingress:
    external: true

volumes:
  grafana_data: {}
  prometheus_data: {}
  loki_data: {}

# attach to both the default and the ingress network
x-networks: &x-networks
  networks:
    default:
    ingress:


services:

  grafana:
    <<: *x-networks
    labels:
      ingress.host: grafana.prom.0-main.de
      ingress.port: 3000
    build:
      context: grafana/
      args:
        # https://hub.docker.com/r/grafana/grafana/tags
        # https://raw.githubusercontent.com/grafana/grafana/v11.2.0/Dockerfile
        IMG: grafana/grafana:11.2.0
    volumes:
      - ./grafana/etc:/etc/grafana:ro
      - grafana_data:/var/lib/grafana
    environment:
      # use grafana/etc/grafana.ini
      # syntax here: GF_<SectionName>_<KeyName>
      - GF_SECURITY_ADMIN_PASSWORD
    restart: unless-stopped

  prometheus:
    # https://hub.docker.com/r/prom/prometheus/tags
    # https://github.com/prometheus/prometheus/blob/v2.38.0/Dockerfile
    image: prom/prometheus:v2.50.1
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    <<: *x-networks
    labels:
      ingress.host: prometheus.prom.0-main.de
      ingress.port: 9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      # DANGER everyone with access to the API can delete
      # I don't care, because it's non-sensitive data and local net only
      - '--web.enable-admin-api'
      - --log.level=warn
    restart: unless-stopped

  loki:
    <<: *x-networks
    labels:
      ingress.host: loki.prom.0-main.de
      ingress.port: 3100
    build:
      context: loki/
      args:
        # https://github.com/grafana/loki/releases
        IMG: grafana/loki:2.9.5
    command:
      - -config.file=/etc/loki/config.yaml
      - -log.level=warn
    volumes:
      - loki_data:/loki
    ports:
      - 127.0.0.1:3100:3100
    restart: unless-stopped

  node-exporter:
    <<: *x-networks
    labels:
      ingress.host: node.prom.0-main.de
      ingress.port: 9100
    # https://hub.docker.com/r/prom/node-exporter/tags
    image: prom/node-exporter:v1.7.0
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.mount-points-exclude
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
      - --log.level=warn
    restart: unless-stopped

  cadvisor:
    <<: *x-networks
    labels:
      ingress.host: cadvisor.prom.0-main.de
      ingress.port: 8080
    # https://github.com/google/cadvisor/releases
    # https://console.cloud.google.com/gcr/images/cadvisor/GLOBAL/cadvisor
    # https://raw.githubusercontent.com/google/cadvisor/v0.47.0/deploy/Dockerfile
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    privileged: true
    restart: unless-stopped

  blackbox_exporter:
    <<: *x-networks
    labels:
      ingress.host: blackbox.prom.0-main.de
      ingress.port: 9115
    build:
      context: blackbox_exporter/
      args:
        # https://hub.docker.com/r/prom/blackbox-exporter/tags
        # https://github.com/prometheus/blackbox_exporter/blob/v0.22.0/Dockerfile
        IMG: prom/blackbox-exporter:v0.24.0
    command:
      - --config.file=/config/blackbox.yml
      - --log.level=warn
    restart: unless-stopped

  promtail:
    # https://hub.docker.com/r/grafana/promtail/tags?page=1&name=2.6.1
    # look for same version as loki
    image: grafana/promtail:2.9.5
    command:
      - -config.file=/etc/promtail/config.yml
      - -log.level=warn
    volumes:
      - /var/log:/var/log
    restart: unless-stopped

  curl:
    <<: *x-networks
    image: curlimages/curl
    command: [ "sleep", "infinity" ]
    stop_signal: SIGKILL

  example:
    build: example/
    environment:
      PYTHONUNBUFFERED: 1
    init: true
    stop_signal: SIGINT
    depends_on:
      - loki

  # used for alertmanager mails
  mailhog:
    <<: *x-networks
    # https://registry.hub.docker.com/r/mailhog/mailhog/tags
    image: mailhog/mailhog:v1.0.1
    labels:
      ingress.host: mail.prom.0-main.de
      ingress.port: 8025
